# Auth Server dev config

server:
  port: 19095

spring:
  application:
    name: AccountService  # 애플리케이션 이름을 'gateway-service'로 설정
  kafka:
    bootstrap-servers: http://localhost:9092
  cloud:
    bus:
      destination: banking-platform.dev.event.config-event.json
      refresh:
        enabled: true
      env:
        enabled: true
  data:
    redis:
      host: localhost
      port: 6379
      username: default
      password: systempass

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: 1234

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 1000


jasypt:
  encryptor:
    password: ${ENCRYPTOR_PASSWORD}
    algorithm: PBEWithHMACSHA512AndAES_256

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/
    health-check:
      enabled: true
  instance:
    hostname: localhost
    metadata-map:
      instanceId: ${spring.application.name}:${spring.cloud.client.hostname}
    lease-renewal-interval-in-seconds: 30  # 기본값은 30초, 서비스 상태 갱신 주기
    lease-expiration-duration-in-seconds: 90  # 기본값은 90초, 서비스 갱신이 없을 때 만료 시간
    health-check-url-path: /actuator/health # 헬스 체크를 통한 정상작동 확인

management:
  endpoints:
    web:
      exposure:
        include: "*, busrefresh"
  endpoint:
    health:
      show-details: always
    env:
      show-values: "ALWAYS"
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0

common:
  bean:
    security:
      enabled: true

test:
  config-name: Account13-Server