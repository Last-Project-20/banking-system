name: Team 20 Banking System CI/CD with AWS EC2, ECR

on:
  push:
    branches:
      - validateToPersonal

env:
  ECR_NAMESPACE: sparta
  ECR_REGISTRY: 211125657451.dkr.ecr.ap-northeast-2.amazonaws.com

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [com.banking.eureka.server,
                  com.banking.config,
                  com.banking.auth,
                  com.banking.gateway,
                  com.banking.commonBean,
                  com.banking.product,
                  com.banking.account,
                  com.banking.personal,
                  com.banking.notification,
                  com.banking.performance]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean :${{ matrix.service }}:bootJar -x test

  dockerize:
    name: Build Docker Image and Push to AWS ECR
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [config, server, gateway, auth, personal, product, account, notification, performance]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # AWS ECR 에 이미지 업로드 권한을 얻기 위해 인증을 진행합니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 로그인
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      # Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/sparta/${{ matrix.service }}:latest .

      # Docker 이미지 태그 지정 (커밋 해시 사용)
      - name: Tag Docker Image
        run: |
          commit_hash=$(git rev-parse --short HEAD)
          docker tag ${{ env.ECR_REGISTRY }}/sparta/${{ matrix.service }}:latest ${{ env.ECR_REGISTRY }}/sparta/${{ matrix.service }}:$commit_hash

      # Docker 이미지 푸시
      - name: Push Docker Image to AWS ECR
        run: |
          docker push ${{ env.ECR_REGISTRY }}/sparta/${{ matrix.service }}:latest
          docker push ${{ env.ECR_REGISTRY }}/sparta/${{ matrix.service }}:$commit_hash
